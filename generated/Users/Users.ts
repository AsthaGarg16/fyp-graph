// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DonateDetails extends ethereum.Event {
  get params(): DonateDetails__Params {
    return new DonateDetails__Params(this);
  }
}

export class DonateDetails__Params {
  _event: DonateDetails;

  constructor(event: DonateDetails) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get paytoken(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class FollowerAdded extends ethereum.Event {
  get params(): FollowerAdded__Params {
    return new FollowerAdded__Params(this);
  }
}

export class FollowerAdded__Params {
  _event: FollowerAdded;

  constructor(event: FollowerAdded) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get follower(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FollowerRemoved extends ethereum.Event {
  get params(): FollowerRemoved__Params {
    return new FollowerRemoved__Params(this);
  }
}

export class FollowerRemoved__Params {
  _event: FollowerRemoved;

  constructor(event: FollowerRemoved) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get follower(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProfileUpdated extends ethereum.Event {
  get params(): ProfileUpdated__Params {
    return new ProfileUpdated__Params(this);
  }
}

export class ProfileUpdated__Params {
  _event: ProfileUpdated;

  constructor(event: ProfileUpdated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get infoUri(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class WalletConnected extends ethereum.Event {
  get params(): WalletConnected__Params {
    return new WalletConnected__Params(this);
  }
}

export class WalletConnected__Params {
  _event: WalletConnected;

  constructor(event: WalletConnected) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get infoUri(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Users__cartResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getNftAddress(): Address {
    return this.value0;
  }

  getTokenId(): BigInt {
    return this.value1;
  }
}

export class Users extends ethereum.SmartContract {
  static bind(address: Address): Users {
    return new Users("Users", address);
  }

  cart(param0: Address, param1: BigInt): Users__cartResult {
    let result = super.call("cart", "cart(address,uint256):(address,uint256)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromUnsignedBigInt(param1)
    ]);

    return new Users__cartResult(result[0].toAddress(), result[1].toBigInt());
  }

  try_cart(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<Users__cartResult> {
    let result = super.tryCall(
      "cart",
      "cart(address,uint256):(address,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Users__cartResult(value[0].toAddress(), value[1].toBigInt())
    );
  }

  followers(param0: Address, param1: BigInt): Address {
    let result = super.call(
      "followers",
      "followers(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toAddress();
  }

  try_followers(param0: Address, param1: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "followers",
      "followers(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  users(param0: Address): string {
    let result = super.call("users", "users(address):(string)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toString();
  }

  try_users(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall("users", "users(address):(string)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class AddFollowerCall extends ethereum.Call {
  get inputs(): AddFollowerCall__Inputs {
    return new AddFollowerCall__Inputs(this);
  }

  get outputs(): AddFollowerCall__Outputs {
    return new AddFollowerCall__Outputs(this);
  }
}

export class AddFollowerCall__Inputs {
  _call: AddFollowerCall;

  constructor(call: AddFollowerCall) {
    this._call = call;
  }

  get creator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get paytoken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amt(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddFollowerCall__Outputs {
  _call: AddFollowerCall;

  constructor(call: AddFollowerCall) {
    this._call = call;
  }
}

export class CreateUserCall extends ethereum.Call {
  get inputs(): CreateUserCall__Inputs {
    return new CreateUserCall__Inputs(this);
  }

  get outputs(): CreateUserCall__Outputs {
    return new CreateUserCall__Outputs(this);
  }
}

export class CreateUserCall__Inputs {
  _call: CreateUserCall;

  constructor(call: CreateUserCall) {
    this._call = call;
  }

  get infouri(): string {
    return this._call.inputValues[0].value.toString();
  }

  get amt(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get payToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class CreateUserCall__Outputs {
  _call: CreateUserCall;

  constructor(call: CreateUserCall) {
    this._call = call;
  }
}

export class RemoveFollowerCall extends ethereum.Call {
  get inputs(): RemoveFollowerCall__Inputs {
    return new RemoveFollowerCall__Inputs(this);
  }

  get outputs(): RemoveFollowerCall__Outputs {
    return new RemoveFollowerCall__Outputs(this);
  }
}

export class RemoveFollowerCall__Inputs {
  _call: RemoveFollowerCall;

  constructor(call: RemoveFollowerCall) {
    this._call = call;
  }

  get creator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveFollowerCall__Outputs {
  _call: RemoveFollowerCall;

  constructor(call: RemoveFollowerCall) {
    this._call = call;
  }
}

export class UpdateUserCall extends ethereum.Call {
  get inputs(): UpdateUserCall__Inputs {
    return new UpdateUserCall__Inputs(this);
  }

  get outputs(): UpdateUserCall__Outputs {
    return new UpdateUserCall__Outputs(this);
  }
}

export class UpdateUserCall__Inputs {
  _call: UpdateUserCall;

  constructor(call: UpdateUserCall) {
    this._call = call;
  }

  get infouri(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UpdateUserCall__Outputs {
  _call: UpdateUserCall;

  constructor(call: UpdateUserCall) {
    this._call = call;
  }
}
