// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddedToCollection extends ethereum.Event {
  get params(): AddedToCollection__Params {
    return new AddedToCollection__Params(this);
  }
}

export class AddedToCollection__Params {
  _event: AddedToCollection;

  constructor(event: AddedToCollection) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get nftAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AddedToWatchlist extends ethereum.Event {
  get params(): AddedToWatchlist__Params {
    return new AddedToWatchlist__Params(this);
  }
}

export class AddedToWatchlist__Params {
  _event: AddedToWatchlist;

  constructor(event: AddedToWatchlist) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get watcher(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class CollectionCreated extends ethereum.Event {
  get params(): CollectionCreated__Params {
    return new CollectionCreated__Params(this);
  }
}

export class CollectionCreated__Params {
  _event: CollectionCreated;

  constructor(event: CollectionCreated) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get logoImage(): string {
    return this._event.parameters[1].value.toString();
  }

  get bannerImage(): string {
    return this._event.parameters[2].value.toString();
  }

  get earnings(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get category(): string {
    return this._event.parameters[4].value.toString();
  }

  get metaInfoUri(): string {
    return this._event.parameters[5].value.toString();
  }

  get creator(): Address {
    return this._event.parameters[6].value.toAddress();
  }
}

export class CollectionsOwnershipTransferred extends ethereum.Event {
  get params(): CollectionsOwnershipTransferred__Params {
    return new CollectionsOwnershipTransferred__Params(this);
  }
}

export class CollectionsOwnershipTransferred__Params {
  _event: CollectionsOwnershipTransferred;

  constructor(event: CollectionsOwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RemovedFromWatchlist extends ethereum.Event {
  get params(): RemovedFromWatchlist__Params {
    return new RemovedFromWatchlist__Params(this);
  }
}

export class RemovedFromWatchlist__Params {
  _event: RemovedFromWatchlist;

  constructor(event: RemovedFromWatchlist) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get watcher(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Collections__collectionsResult {
  value0: string;
  value1: string;
  value2: i32;
  value3: string;
  value4: string;
  value5: Address;

  constructor(
    value0: string,
    value1: string,
    value2: i32,
    value3: string,
    value4: string,
    value5: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    return map;
  }

  getLogoImage(): string {
    return this.value0;
  }

  getBannerImage(): string {
    return this.value1;
  }

  getEarnings(): i32 {
    return this.value2;
  }

  getCategory(): string {
    return this.value3;
  }

  getMetaInfoUri(): string {
    return this.value4;
  }

  getCreator(): Address {
    return this.value5;
  }
}

export class Collections extends ethereum.SmartContract {
  static bind(address: Address): Collections {
    return new Collections("Collections", address);
  }

  collections(param0: string, param1: Address): Collections__collectionsResult {
    let result = super.call(
      "collections",
      "collections(string,address):(string,string,uint16,string,string,address)",
      [ethereum.Value.fromString(param0), ethereum.Value.fromAddress(param1)]
    );

    return new Collections__collectionsResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toI32(),
      result[3].toString(),
      result[4].toString(),
      result[5].toAddress()
    );
  }

  try_collections(
    param0: string,
    param1: Address
  ): ethereum.CallResult<Collections__collectionsResult> {
    let result = super.tryCall(
      "collections",
      "collections(string,address):(string,string,uint16,string,string,address)",
      [ethereum.Value.fromString(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Collections__collectionsResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toI32(),
        value[3].toString(),
        value[4].toString(),
        value[5].toAddress()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AddToCollectionCall extends ethereum.Call {
  get inputs(): AddToCollectionCall__Inputs {
    return new AddToCollectionCall__Inputs(this);
  }

  get outputs(): AddToCollectionCall__Outputs {
    return new AddToCollectionCall__Outputs(this);
  }
}

export class AddToCollectionCall__Inputs {
  _call: AddToCollectionCall;

  constructor(call: AddToCollectionCall) {
    this._call = call;
  }

  get collectionName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get nftAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddToCollectionCall__Outputs {
  _call: AddToCollectionCall;

  constructor(call: AddToCollectionCall) {
    this._call = call;
  }
}

export class AddToWatchlistCall extends ethereum.Call {
  get inputs(): AddToWatchlistCall__Inputs {
    return new AddToWatchlistCall__Inputs(this);
  }

  get outputs(): AddToWatchlistCall__Outputs {
    return new AddToWatchlistCall__Outputs(this);
  }
}

export class AddToWatchlistCall__Inputs {
  _call: AddToWatchlistCall;

  constructor(call: AddToWatchlistCall) {
    this._call = call;
  }

  get collectionName(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddToWatchlistCall__Outputs {
  _call: AddToWatchlistCall;

  constructor(call: AddToWatchlistCall) {
    this._call = call;
  }
}

export class CreateCollectionCall extends ethereum.Call {
  get inputs(): CreateCollectionCall__Inputs {
    return new CreateCollectionCall__Inputs(this);
  }

  get outputs(): CreateCollectionCall__Outputs {
    return new CreateCollectionCall__Outputs(this);
  }
}

export class CreateCollectionCall__Inputs {
  _call: CreateCollectionCall;

  constructor(call: CreateCollectionCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get logoImage(): string {
    return this._call.inputValues[1].value.toString();
  }

  get bannerImage(): string {
    return this._call.inputValues[2].value.toString();
  }

  get earnings(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get category(): string {
    return this._call.inputValues[4].value.toString();
  }

  get metaInfoUri(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class CreateCollectionCall__Outputs {
  _call: CreateCollectionCall;

  constructor(call: CreateCollectionCall) {
    this._call = call;
  }
}

export class RemoveFromWatchlistCall extends ethereum.Call {
  get inputs(): RemoveFromWatchlistCall__Inputs {
    return new RemoveFromWatchlistCall__Inputs(this);
  }

  get outputs(): RemoveFromWatchlistCall__Outputs {
    return new RemoveFromWatchlistCall__Outputs(this);
  }
}

export class RemoveFromWatchlistCall__Inputs {
  _call: RemoveFromWatchlistCall;

  constructor(call: RemoveFromWatchlistCall) {
    this._call = call;
  }

  get collectionName(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RemoveFromWatchlistCall__Outputs {
  _call: RemoveFromWatchlistCall;

  constructor(call: RemoveFromWatchlistCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
